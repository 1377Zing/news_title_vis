{
  "version": 3,
  "sources": ["../../echarts/lib/coord/geo/fix/textCoord.js", "../../echarts/lib/data/helper/linkSeriesData.js", "../../echarts/lib/data/Graph.js", "../../echarts/lib/coord/cartesian/Cartesian.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar coordsOffsetMap = {\n  '\u5357\u6D77\u8BF8\u5C9B': [32, 80],\n  // \u5168\u56FD\n  '\u5E7F\u4E1C': [0, -10],\n  '\u9999\u6E2F': [10, 5],\n  '\u6FB3\u95E8': [-10, 10],\n  // '\u5317\u4EAC': [-10, 0],\n  '\u5929\u6D25': [5, 5]\n};\nexport default function fixTextCoords(mapType, region) {\n  if (mapType === 'china') {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.getCenter();\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n      region.setCenter(cp);\n    }\n  }\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * Link lists and struct (graph or tree)\r\n */\nimport { curry, each, assert, extend, map, keys } from 'zrender/lib/core/util.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\n\nfunction linkSeriesData(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = extend({}, inner(this).datas);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, inner(this).mainData, opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update();\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(inner(res).datas, function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\r\n * Supplement method to List.\r\n *\r\n * @public\r\n * @param [dataType] If not specified, return mainData.\r\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = inner(this).mainData;\n  return dataType == null || mainData == null ? mainData : inner(mainData).datas[dataType];\n}\n/**\r\n * Get list of all linked data\r\n */\n\n\nfunction getLinkedDataAll() {\n  var mainData = inner(this).mainData;\n  return mainData == null ? [{\n    data: mainData\n  }] : map(keys(inner(mainData).datas), function (type) {\n    return {\n      type: type,\n      data: inner(mainData).datas[type]\n    };\n  });\n}\n\nfunction isMainData(data) {\n  return inner(data).mainData === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  inner(mainData).datas = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  inner(mainData).datas[dataType] = data;\n  inner(data).mainData = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n  data.getLinkedDataAll = getLinkedDataAll;\n}\n\nexport default linkSeriesData;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js'; // id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(directed) {\n    this.type = 'graph';\n    this.nodes = [];\n    this.edges = [];\n    this._nodesMap = {};\n    /**\r\n     * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n     * @private\r\n     */\n\n    this._edgesMap = {};\n    this._directed = directed || false;\n  }\n  /**\r\n   * If is directed graph\r\n   */\n\n\n  Graph.prototype.isDirected = function () {\n    return this._directed;\n  };\n\n  ;\n  /**\r\n   * Add a new node\r\n   */\n\n  Graph.prototype.addNode = function (id, dataIndex) {\n    id = id == null ? '' + dataIndex : '' + id;\n    var nodesMap = this._nodesMap;\n\n    if (nodesMap[generateNodeKey(id)]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Graph nodes have duplicate name or id');\n      }\n\n      return;\n    }\n\n    var node = new GraphNode(id, dataIndex);\n    node.hostGraph = this;\n    this.nodes.push(node);\n    nodesMap[generateNodeKey(id)] = node;\n    return node;\n  };\n\n  ;\n  /**\r\n   * Get node by data index\r\n   */\n\n  Graph.prototype.getNodeByIndex = function (dataIndex) {\n    var rawIdx = this.data.getRawIndex(dataIndex);\n    return this.nodes[rawIdx];\n  };\n\n  ;\n  /**\r\n   * Get node by id\r\n   */\n\n  Graph.prototype.getNodeById = function (id) {\n    return this._nodesMap[generateNodeKey(id)];\n  };\n\n  ;\n  /**\r\n   * Add a new edge\r\n   */\n\n  Graph.prototype.addEdge = function (n1, n2, dataIndex) {\n    var nodesMap = this._nodesMap;\n    var edgesMap = this._edgesMap; // PENDING\n\n    if (zrUtil.isNumber(n1)) {\n      n1 = this.nodes[n1];\n    }\n\n    if (zrUtil.isNumber(n2)) {\n      n2 = this.nodes[n2];\n    }\n\n    if (!(n1 instanceof GraphNode)) {\n      n1 = nodesMap[generateNodeKey(n1)];\n    }\n\n    if (!(n2 instanceof GraphNode)) {\n      n2 = nodesMap[generateNodeKey(n2)];\n    }\n\n    if (!n1 || !n2) {\n      return;\n    }\n\n    var key = n1.id + '-' + n2.id;\n    var edge = new GraphEdge(n1, n2, dataIndex);\n    edge.hostGraph = this;\n\n    if (this._directed) {\n      n1.outEdges.push(edge);\n      n2.inEdges.push(edge);\n    }\n\n    n1.edges.push(edge);\n\n    if (n1 !== n2) {\n      n2.edges.push(edge);\n    }\n\n    this.edges.push(edge);\n    edgesMap[key] = edge;\n    return edge;\n  };\n\n  ;\n  /**\r\n   * Get edge by data index\r\n   */\n\n  Graph.prototype.getEdgeByIndex = function (dataIndex) {\n    var rawIdx = this.edgeData.getRawIndex(dataIndex);\n    return this.edges[rawIdx];\n  };\n\n  ;\n  /**\r\n   * Get edge by two linked nodes\r\n   */\n\n  Graph.prototype.getEdge = function (n1, n2) {\n    if (n1 instanceof GraphNode) {\n      n1 = n1.id;\n    }\n\n    if (n2 instanceof GraphNode) {\n      n2 = n2.id;\n    }\n\n    var edgesMap = this._edgesMap;\n\n    if (this._directed) {\n      return edgesMap[n1 + '-' + n2];\n    } else {\n      return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n    }\n  };\n\n  ;\n  /**\r\n   * Iterate all nodes\r\n   */\n\n  Graph.prototype.eachNode = function (cb, context) {\n    var nodes = this.nodes;\n    var len = nodes.length;\n\n    for (var i = 0; i < len; i++) {\n      if (nodes[i].dataIndex >= 0) {\n        cb.call(context, nodes[i], i);\n      }\n    }\n  };\n\n  ;\n  /**\r\n   * Iterate all edges\r\n   */\n\n  Graph.prototype.eachEdge = function (cb, context) {\n    var edges = this.edges;\n    var len = edges.length;\n\n    for (var i = 0; i < len; i++) {\n      if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n        cb.call(context, edges[i], i);\n      }\n    }\n  };\n\n  ;\n  /**\r\n   * Breadth first traverse\r\n   * Return true to stop traversing\r\n   */\n\n  Graph.prototype.breadthFirstTraverse = function (cb, startNode, direction, context) {\n    if (!(startNode instanceof GraphNode)) {\n      startNode = this._nodesMap[generateNodeKey(startNode)];\n    }\n\n    if (!startNode) {\n      return;\n    }\n\n    var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      this.nodes[i].__visited = false;\n    }\n\n    if (cb.call(context, startNode, null)) {\n      return;\n    }\n\n    var queue = [startNode];\n\n    while (queue.length) {\n      var currentNode = queue.shift();\n      var edges = currentNode[edgeType];\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n        if (!otherNode.__visited) {\n          if (cb.call(context, otherNode, currentNode)) {\n            // Stop traversing\n            return;\n          }\n\n          queue.push(otherNode);\n          otherNode.__visited = true;\n        }\n      }\n    }\n  };\n\n  ; // TODO\n  // depthFirstTraverse(\n  //     cb, startNode, direction, context\n  // ) {\n  // };\n  // Filter update\n\n  Graph.prototype.update = function () {\n    var data = this.data;\n    var edgeData = this.edgeData;\n    var nodes = this.nodes;\n    var edges = this.edges;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n\n    edgeData.filterSelf(function (idx) {\n      var edge = edges[edgeData.getRawIndex(idx)];\n      return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n    }); // Update edge\n\n    for (var i = 0, len = edges.length; i < len; i++) {\n      edges[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = edgeData.count(); i < len; i++) {\n      edges[edgeData.getRawIndex(i)].dataIndex = i;\n    }\n  };\n\n  ;\n  /**\r\n   * @return {module:echarts/data/Graph}\r\n   */\n\n  Graph.prototype.clone = function () {\n    var graph = new Graph(this._directed);\n    var nodes = this.nodes;\n    var edges = this.edges;\n\n    for (var i = 0; i < nodes.length; i++) {\n      graph.addNode(nodes[i].id, nodes[i].dataIndex);\n    }\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n    }\n\n    return graph;\n  };\n\n  ;\n  return Graph;\n}();\n\nvar GraphNode =\n/** @class */\nfunction () {\n  function GraphNode(id, dataIndex) {\n    this.inEdges = [];\n    this.outEdges = [];\n    this.edges = [];\n    this.dataIndex = -1;\n    this.id = id == null ? '' : id;\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\n  }\n  /**\r\n   * @return {number}\r\n   */\n\n\n  GraphNode.prototype.degree = function () {\n    return this.edges.length;\n  };\n  /**\r\n   * @return {number}\r\n   */\n\n\n  GraphNode.prototype.inDegree = function () {\n    return this.inEdges.length;\n  };\n  /**\r\n  * @return {number}\r\n  */\n\n\n  GraphNode.prototype.outDegree = function () {\n    return this.outEdges.length;\n  };\n\n  GraphNode.prototype.getModel = function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  };\n\n  GraphNode.prototype.getAdjacentDataIndices = function () {\n    var dataIndices = {\n      edge: [],\n      node: []\n    };\n\n    for (var i = 0; i < this.edges.length; i++) {\n      var adjacentEdge = this.edges[i];\n\n      if (adjacentEdge.dataIndex < 0) {\n        continue;\n      }\n\n      dataIndices.edge.push(adjacentEdge.dataIndex);\n      dataIndices.node.push(adjacentEdge.node1.dataIndex, adjacentEdge.node2.dataIndex);\n    }\n\n    return dataIndices;\n  };\n\n  GraphNode.prototype.getTrajectoryDataIndices = function () {\n    var connectedEdgesMap = zrUtil.createHashMap();\n    var connectedNodesMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < this.edges.length; i++) {\n      var adjacentEdge = this.edges[i];\n\n      if (adjacentEdge.dataIndex < 0) {\n        continue;\n      }\n\n      connectedEdgesMap.set(adjacentEdge.dataIndex, true);\n      var sourceNodesQueue = [adjacentEdge.node1];\n      var targetNodesQueue = [adjacentEdge.node2];\n      var nodeIteratorIndex = 0;\n\n      while (nodeIteratorIndex < sourceNodesQueue.length) {\n        var sourceNode = sourceNodesQueue[nodeIteratorIndex];\n        nodeIteratorIndex++;\n        connectedNodesMap.set(sourceNode.dataIndex, true);\n\n        for (var j = 0; j < sourceNode.inEdges.length; j++) {\n          connectedEdgesMap.set(sourceNode.inEdges[j].dataIndex, true);\n          sourceNodesQueue.push(sourceNode.inEdges[j].node1);\n        }\n      }\n\n      nodeIteratorIndex = 0;\n\n      while (nodeIteratorIndex < targetNodesQueue.length) {\n        var targetNode = targetNodesQueue[nodeIteratorIndex];\n        nodeIteratorIndex++;\n        connectedNodesMap.set(targetNode.dataIndex, true);\n\n        for (var j = 0; j < targetNode.outEdges.length; j++) {\n          connectedEdgesMap.set(targetNode.outEdges[j].dataIndex, true);\n          targetNodesQueue.push(targetNode.outEdges[j].node2);\n        }\n      }\n    }\n\n    return {\n      edge: connectedEdgesMap.keys(),\n      node: connectedNodesMap.keys()\n    };\n  };\n\n  return GraphNode;\n}();\n\nvar GraphEdge =\n/** @class */\nfunction () {\n  function GraphEdge(n1, n2, dataIndex) {\n    this.dataIndex = -1;\n    this.node1 = n1;\n    this.node2 = n2;\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  GraphEdge.prototype.getModel = function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  };\n\n  GraphEdge.prototype.getAdjacentDataIndices = function () {\n    return {\n      edge: [this.dataIndex],\n      node: [this.node1.dataIndex, this.node2.dataIndex]\n    };\n  };\n\n  GraphEdge.prototype.getTrajectoryDataIndices = function () {\n    var connectedEdgesMap = zrUtil.createHashMap();\n    var connectedNodesMap = zrUtil.createHashMap();\n    connectedEdgesMap.set(this.dataIndex, true);\n    var sourceNodes = [this.node1];\n    var targetNodes = [this.node2];\n    var nodeIteratorIndex = 0;\n\n    while (nodeIteratorIndex < sourceNodes.length) {\n      var sourceNode = sourceNodes[nodeIteratorIndex];\n      nodeIteratorIndex++;\n      connectedNodesMap.set(sourceNode.dataIndex, true);\n\n      for (var j = 0; j < sourceNode.inEdges.length; j++) {\n        connectedEdgesMap.set(sourceNode.inEdges[j].dataIndex, true);\n        sourceNodes.push(sourceNode.inEdges[j].node1);\n      }\n    }\n\n    nodeIteratorIndex = 0;\n\n    while (nodeIteratorIndex < targetNodes.length) {\n      var targetNode = targetNodes[nodeIteratorIndex];\n      nodeIteratorIndex++;\n      connectedNodesMap.set(targetNode.dataIndex, true);\n\n      for (var j = 0; j < targetNode.outEdges.length; j++) {\n        connectedEdgesMap.set(targetNode.outEdges[j].dataIndex, true);\n        targetNodes.push(targetNode.outEdges[j].node2);\n      }\n    }\n\n    return {\n      edge: connectedEdgesMap.keys(),\n      node: connectedNodesMap.keys()\n    };\n  };\n\n  return GraphEdge;\n}();\n\nfunction createGraphDataProxyMixin(hostName, dataName) {\n  return {\n    /**\r\n     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\n    },\n    // TODO: TYPE stricter type.\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n    getVisual: function (key) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key);\n    },\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n}\n\n;\n;\n;\nzrUtil.mixin(GraphNode, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(GraphEdge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nexport default Graph;\nexport { GraphNode, GraphEdge };", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\n\nvar Cartesian =\n/** @class */\nfunction () {\n  function Cartesian(name) {\n    this.type = 'cartesian';\n    this._dimList = [];\n    this._axes = {};\n    this.name = name || '';\n  }\n\n  Cartesian.prototype.getAxis = function (dim) {\n    return this._axes[dim];\n  };\n\n  Cartesian.prototype.getAxes = function () {\n    return zrUtil.map(this._dimList, function (dim) {\n      return this._axes[dim];\n    }, this);\n  };\n\n  Cartesian.prototype.getAxesByScale = function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  };\n\n  Cartesian.prototype.addAxis = function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  };\n\n  return Cartesian;\n}();\n\n;\nexport default Cartesian;"],
  "mappings": "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",
  "names": ["Graph", "GraphNode", "GraphEdge", "Cartesian"]
}
